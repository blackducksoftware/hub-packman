[
    {
        "propertyKey": "detect.suppress.configuration.output",
        "defaultValue": "false",
        "description": "If true, the default behavior of printing your configuration properties at startup will be suppressed.",
        "propertyType": "Boolean",
        "group": "LOGGING"
    },
    {
        "propertyKey": "detect.cleanup.bdio.files",
        "defaultValue": "true",
        "description": "If true the bdio files will be deleted after upload",
        "propertyType": "Boolean",
        "group": "CLEANUP"
    },
    {
        "propertyKey": "detect.test.connection",
        "defaultValue": "false",
        "description": "Test the connection to the Hub with the current configuration",
        "propertyType": "Boolean",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.url",
        "description": "URL of the Hub server",
        "propertyType": "String",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.timeout",
        "defaultValue": "120",
        "description": "Time to wait for rest connections to complete",
        "propertyType": "Integer",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.username",
        "description": "Hub username",
        "propertyType": "String",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.password",
        "description": "Hub password",
        "propertyType": "String",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.proxy.host",
        "description": "Proxy host",
        "propertyType": "String",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.proxy.port",
        "description": "Proxy port",
        "propertyType": "String",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.proxy.username",
        "description": "Proxy username",
        "propertyType": "String",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.proxy.password",
        "description": "Proxy password",
        "propertyType": "String",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.auto.import.cert",
        "defaultValue": "false",
        "description": "If true the Hub https certificate will be automatically imported",
        "propertyType": "Boolean",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "blackduck.hub.offline.mode",
        "defaultValue": "false",
        "description": "This can disable any Hub communication - if true, Detect will not upload BDIO files, it will not check policies, and it will not download and install the signature scanner.",
        "propertyType": "Boolean",
        "group": "HUB_CONFIGURATION"
    },
    {
        "propertyKey": "detect.source.path",
        "propertyType": "String",
        "group": "PATHS"
    },
    {
        "propertyKey": "detect.output.path",
        "propertyType": "String",
        "group": "PATHS"
    },
    {
        "propertyKey": "detect.search.depth",
        "defaultValue": "3",
        "propertyType": "Integer",
        "group": "PATHS"
    },
    {
        "propertyKey": "detect.excluded.bom.tool.types",
        "propertyType": "String",
        "group": "BOMTOOL"
    },
    {
        "propertyKey": "detect.included.bom.tool.types",
        "propertyType": "String",
        "group": "BOMTOOL"
    },
    {
        "propertyKey": "detect.project.name",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.project.version.name",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.project.codelocation.prefix",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.project.level.adjustments",
        "defaultValue": "true",
        "propertyType": "Boolean",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.project.version.phase",
        "defaultValue": "Development",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.project.version.distribution",
        "defaultValue": "External",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.policy.check",
        "defaultValue": "false",
        "propertyType": "Boolean",
        "group": "POLICY_CHECK"
    },
    {
        "propertyKey": "detect.policy.check.timeout",
        "defaultValue": "300000",
        "description": "Timeout for the Hub's policy check response. When changing this value, keep in mind the checking of policies might have to wait for a new scan to process which can take some time.",
        "propertyType": "Long",
        "group": "POLICY_CHECK"
    },
    {
        "propertyKey": "detect.gradle.inspector.version",
        "defaultValue": "0.2.1",
        "description": "Version of the Gradle Inspector",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.gradle.build.command",
        "defaultValue": "dependencies",
        "description": "Gradle build command",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.gradle.excluded.configurations",
        "description": "The names of the dependency configurations to exclude",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.gradle.included.configurations",
        "description": "The names of the dependency configurations to include",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.gradle.excluded.projects",
        "description": "The names of the projects to exclude",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.gradle.included.projects",
        "description": "The names of the projects to include",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.gradle.cleanup.build.blackduck.directory",
        "defaultValue": "true",
        "description": "Set this to false if you do not want the 'blackduck' directory in your build directory to be deleted.",
        "propertyType": "Boolean",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.nuget.inspector.name",
        "defaultValue": "IntegrationNugetInspector",
        "description": "Name of the Nuget Inspector",
        "propertyType": "String",
        "group": "NUGET"
    },
    {
        "propertyKey": "detect.nuget.inspector.version",
        "defaultValue": "2.1.0",
        "description": "Version of the Nuget Inspector",
        "propertyType": "String",
        "group": "NUGET"
    },
    {
        "propertyKey": "detect.nuget.excluded.modules",
        "description": "The names of the projects in a solution to exclude",
        "propertyType": "String",
        "group": "NUGET"
    },
    {
        "propertyKey": "detect.nuget.ignore.failure",
        "defaultValue": "false",
        "description": "If true errors will be logged and then ignored.",
        "propertyType": "Boolean",
        "group": "NUGET"
    },
    {
        "propertyKey": "detect.maven.scope",
        "description": "The name of the dependency scope to include",
        "propertyType": "String",
        "group": "MAVEN"
    },
    {
        "propertyKey": "detect.gradle.path",
        "description": "Path of the Gradle executable",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.maven.path",
        "description": "The path of the Maven executable",
        "propertyType": "String",
        "group": "MAVEN"
    },
    {
        "propertyKey": "detect.nuget.path",
        "description": "The path of the Nuget executable",
        "propertyType": "String",
        "group": "NUGET"
    },
    {
        "propertyKey": "detect.pip.project.name",
        "description": "Override for pip inspector to find your project",
        "propertyType": "String",
        "group": "PIP"
    },
    {
        "propertyKey": "detect.pip.pip3",
        "defaultValue": "false",
        "description": "If true will use pip3 if available on class path",
        "propertyType": "Boolean",
        "group": "PIP"
    },
    {
        "propertyKey": "detect.python.path",
        "description": "The path of the Python executable",
        "propertyType": "String",
        "group": "PYTHON"
    },
    {
        "propertyKey": "detect.pip.path",
        "description": "The path of the Pip executable",
        "propertyType": "String",
        "group": "PIP"
    },
    {
        "propertyKey": "detect.npm.path",
        "description": "The path of the Npm executable",
        "propertyType": "String",
        "group": "NPM"
    },
    {
        "propertyKey": "detect.pear.path",
        "description": "The path of the pear executable",
        "propertyType": "String",
        "group": "PEAR"
    },
    {
        "propertyKey": "detect.pear.not.required.dependencies",
        "defaultValue": "false",
        "description": "Set to true if you would like to include the not required packages",
        "propertyType": "Boolean",
        "group": "PEAR"
    },
    {
        "propertyKey": "detect.pip.virtualEnv.path",
        "description": "The path to a user's virtual environment",
        "propertyType": "String",
        "group": "PIP"
    },
    {
        "propertyKey": "detect.pip.requirements.path",
        "description": "The path of the requirements.txt file",
        "propertyType": "String",
        "group": "PIP"
    },
    {
        "propertyKey": "detect.go.dep.path",
        "description": "Path of the Go Dep executable",
        "propertyType": "String",
        "group": "GO"
    },
    {
        "propertyKey": "detect.docker.path",
        "description": "Path of the docker executable",
        "propertyType": "String",
        "group": "DOCKER"
    },
    {
        "propertyKey": "detect.docker.inspector.path",
        "description": "This is used to override using the hosted script by github url. You can provide your own script at this path.",
        "propertyType": "String",
        "group": "DOCKER"
    },
    {
        "propertyKey": "detect.docker.inspector.version",
        "defaultValue": "latest",
        "description": "Version of the Hub Docker Inspector to use",
        "propertyType": "String",
        "group": "DOCKER"
    },
    {
        "propertyKey": "detect.docker.tar",
        "description": "A saved docker image - must be a .tar file. For detect to run docker either this property or detect.docker.image must be set.",
        "propertyType": "String",
        "group": "DOCKER"
    },
    {
        "propertyKey": "detect.docker.image",
        "description": "The docker image name to inspect. For detect to run docker either this property or detect.docker.tar must be set.",
        "propertyType": "String",
        "group": "DOCKER"
    },
    {
        "propertyKey": "detect.bash.path",
        "description": "Path of the bash executable",
        "propertyType": "String",
        "group": "PATHS"
    },
    {
        "propertyKey": "logging.level.com.blackducksoftware.integration",
        "javaName": "loggingLevel",
        "defaultValue": "INFO",
        "description": "The logging level of Detect (ALL|TRACE|DEBUG|INFO|WARN|ERROR|FATAL|OFF)",
        "propertyType": "String",
        "group": "LOGGING"
    },
    {
        "propertyKey": "detect.cleanup.bom.tool.files",
        "defaultValue": "true",
        "description": "Detect creates temporary files in the output directory. If set to true this will clean them up after execution",
        "propertyType": "Boolean",
        "group": "CLEANUP"
    },
    {
        "propertyKey": "detect.hub.signature.scanner.dry.run",
        "defaultValue": "false",
        "description": "If set to true, the signature scanner results will not be uploaded to the Hub and the scanner results will be written to disk.",
        "propertyType": "Boolean",
        "group": "SIGNATURE_SCANNER"
    },
    {
        "propertyKey": "detect.hub.signature.scanner.exclusion.patterns",
        "description": "Enables you to specify sub-directories to exclude from scans",
        "propertyType": "String[]",
        "group": "SIGNATURE_SCANNER"
    },
    {
        "propertyKey": "detect.hub.signature.scanner.paths",
        "description": "These paths and only these paths will be scanned.",
        "propertyType": "String[]",
        "group": "SIGNATURE_SCANNER"
    },
    {
        "propertyKey": "detect.hub.signature.scanner.relative.paths.to.exclude",
        "description": "The relative paths of directories to be excluded from scan registration",
        "propertyType": "String[]",
        "group": "SIGNATURE_SCANNER"
    },
    {
        "propertyKey": "detect.hub.signature.scanner.memory",
        "defaultValue": "4096",
        "description": "The memory for the scanner to use.",
        "propertyType": "Integer",
        "group": "SIGNATURE_SCANNER"
    },
    {
        "propertyKey": "detect.hub.signature.scanner.disabled",
        "defaultValue": "false",
        "description": "Set to true to disable the Hub Signature Scanner.",
        "propertyType": "Boolean",
        "group": "SIGNATURE_SCANNER"
    },
    {
        "propertyKey": "detect.hub.signature.scanner.offline.local.path",
        "description": "To use a local signature scanner, set its location with this property. This will be the path that contains the 'Hub_Scan_Installation' directory where the signature scanner was unzipped.",
        "propertyType": "String",
        "group": "SIGNATURE_SCANNER"
    },
    {
        "propertyKey": "detect.packagist.include.dev.dependencies",
        "defaultValue": "true",
        "description": "Set this value to false if you would like to exclude your dev requires dependencies when ran",
        "propertyType": "Boolean",
        "group": "PACKAGIST"
    },
    {
        "propertyKey": "detect.perl.path",
        "description": "The path of the perl executable",
        "propertyType": "String",
        "group": "CPAN"
    },
    {
        "propertyKey": "detect.cpan.path",
        "description": "The path of the cpan executable",
        "propertyType": "String",
        "group": "CPAN"
    },
    {
        "propertyKey": "detect.cpanm.path",
        "description": "The path of the cpanm executable",
        "propertyType": "String",
        "group": "CPAN"
    },
    {
        "propertyKey": "detect.sbt.excluded.configurations",
        "description": "The names of the sbt configurations to exclude",
        "propertyType": "String",
        "group": "SBT"
    },
    {
        "propertyKey": "detect.sbt.included.configurations",
        "description": "The names of the sbt configurations to include",
        "propertyType": "String",
        "group": "SBT"
    },
    {
        "propertyKey": "detect.default.project.version.scheme",
        "defaultValue": "text",
        "description": "The scheme to use when the package managers can not determine a version, either 'text' or 'timestamp'",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.default.project.version.text",
        "defaultValue": "Detect Unknown Version",
        "description": "The text to use as the default project version",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.default.project.version.timeformat",
        "defaultValue": "yyyy-MM-dd\\'T\\'HH:mm:ss.SSS",
        "description": "The timestamp format to use as the default project version",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.bom.aggregate.name",
        "description": "If set, this will aggregate all the BOMs to create a single BDIO file with the name provided. For Co-Pilot use only",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.risk.report.pdf",
        "defaultValue": "false",
        "description": "When set to true, a Black Duck risk report in PDF form will be created",
        "propertyType": "Boolean",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.risk.report.pdf.path",
        "defaultValue": ".",
        "description": "The output directory for risk report in PDF. Default is the source directory",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.notices.report",
        "defaultValue": "false",
        "description": "When set to true, a Black Duck notices report in text form will be created in your source directory",
        "propertyType": "Boolean",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.notices.report.path",
        "defaultValue": ".",
        "description": "The output directory for notices report. Default is the source directory",
        "propertyType": "String",
        "group": "PROJECT_INFO"
    },
    {
        "propertyKey": "detect.conda.path",
        "description": "The path of the conda executable",
        "propertyType": "String",
        "group": "CONDA"
    },
    {
        "propertyKey": "detect.conda.environment.name",
        "description": "The name of the anaconda environment used by your project",
        "propertyType": "String",
        "group": "CONDA"
    },
    {
        "propertyKey": "detect.gradle.inspector.air.gap.path",
        "description": "The path to the directory containing the air gap dependencies for the gradle inspector",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.gradle.inspector.repository.url",
        "description": "The url to the repository to look for the gradle inspector",
        "propertyType": "String",
        "group": "GRADLE"
    },
    {
        "propertyKey": "detect.nuget.inspector.air.gap.path",
        "description": "The path to the nuget inspector nupkg",
        "propertyType": "String",
        "group": "NUGET"
    },
    {
        "propertyKey": "detect.nuget.packages.repo.url",
        "description": "The url to the repository from which Nuget should resolve dependencies from",
        "defaultValue": "https://www.nuget.org/api/v2/",
        "propertyType": "String",
        "group": "NUGET"
    },
    {
        "propertyKey": "detect.npm.include.dev.dependencies",
        "description": "Set this value to false if you would like to exclude your dev dependencies when ran",
        "defaultValue": "true",
        "propertyType": "Boolean",
        "group": "NPM"
    },
    {
        "propertyKey": "detect.suppress.results.output",
        "description": "If true, the default behavior of printing the Detect Results will be suppressed",
        "defaultValue": "false",
        "propertyType": "Boolean",
        "group": "LOGGING"
    },
    {
        "propertyKey": "logging.pattern.console",
        "defaultValue": "${LOG_LEVEL_PATTERN}%clr(---){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    }
]
